# Set your user tokens as enivornment variables

[core]
  excludesfile = ~/.gitignore
  # This makes vim jump to the first line when you enter edit mode for the commit
  editor = vim -c ':normal gg'

[status]
  showUntrackedFiles = all

[commit]
  template = ~/.git-commit-template

[push]
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = tracking

[rebase]
  autostash = true

[rerere]
  # http://git-scm.com/book/en/v2/Git-Tools-Rerere
  enabled = true

[branch]
  autosetuprebase = always

[branch "master"]
  rebase = true

[color]
  ui = true

[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true

  # Detect renames and copies
  renames = copies

  # Better detection of words
  wordRegex = .

[private-build]
  command = mvn install

[alias]
  st = status
  ci = commit -v
  co = checkout
  br = branch

  up = !git-up

  ls-ignored = ls-files --exclude-standard --ignored --others

  amend = !git commit --amend --reuse-message=HEAD --date=\"$(date -R)\"
  ammend = !git amend

  # stage
  sf = stage -u

  # diff
  dc = diff --cached
  wd = diff --word-diff=color
  wdc = diff --word-diff=color --staged

  # log
  l = log --oneline
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  changes = log --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative --name-status
  out = log @{u}..

  # reset
  unstage = reset HEAD

[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
